"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[27530],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>f});var r=n(296540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),d=a,f=c["".concat(s,".").concat(d)]||c[d]||m[d]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},223068:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(58168),a=(n(296540),n(15680));const o={title:"Get Small File Action",language:"en"},i=void 0,l={unversionedId:"admin-manual/fe/get-wal-size-action",id:"version-2.1/admin-manual/fe/get-wal-size-action",title:"Get Small File Action",description:"\x3c!--",source:"@site/versioned_docs/version-2.1/admin-manual/fe/get-wal-size-action.md",sourceDirName:"admin-manual/fe",slug:"/admin-manual/fe/get-wal-size-action",permalink:"/docs/admin-manual/fe/get-wal-size-action",draft:!1,tags:[],version:"2.1",frontMatter:{title:"Get Small File Action",language:"en"},sidebar:"docs",previous:{title:"Get Small File Action",permalink:"/docs/admin-manual/fe/get-small-file"},next:{title:"Health Action",permalink:"/docs/admin-manual/fe/health-action"}},s={},p=[{value:"Request",id:"request",level:2},{value:"Description",id:"description",level:2},{value:"Path parameters",id:"path-parameters",level:2},{value:"Query parameters",id:"query-parameters",level:2},{value:"Request body",id:"request-body",level:2},{value:"Response",id:"response",level:2},{value:"Examples",id:"examples",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...n}=e;return(0,a.yg)(c,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"get-wal-size"},"Get WAL size"),(0,a.yg)("h2",{id:"request"},"Request"),(0,a.yg)("p",null,(0,a.yg)("inlineCode",{parentName:"p"},"GET fe_host:fe_http_port/api/get_wal_size?host_ports=host1:port1,host2:port2...")),(0,a.yg)("h2",{id:"description"},"Description"),(0,a.yg)("p",null,"This HTTP interface allows users to obtain the number of WAL files for specified Backends (BEs). If no BE is specified, it returns the number of WAL files for all BEs."),(0,a.yg)("h2",{id:"path-parameters"},"Path parameters"),(0,a.yg)("p",null,"None"),(0,a.yg)("h2",{id:"query-parameters"},"Query parameters"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("inlineCode",{parentName:"p"},"host_ports")),(0,a.yg)("p",{parentName:"li"},"  The IP and HTTP port of the BE."))),(0,a.yg)("h2",{id:"request-body"},"Request body"),(0,a.yg)("p",null,"None"),(0,a.yg)("h2",{id:"response"},"Response"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},'{\n"msg": "OK",\n"code": 0,\n"data": ["192.168.10.11:9050:1", "192.168.10.11:9050:0"],\n"count": 0\n}\n')),(0,a.yg)("h2",{id:"examples"},"Examples"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"To obtain the number of WAL files for all BEs."),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre"},'curl -u root: "127.0.0.1:8038/api/get_wal_size"\n\nResponse:\n{\n"msg": "OK",\n"code": 0,\n"data": ["192.168.10.11:9050:1", "192.168.10.11:9050:0"],\n"count": 0\n}\n')),(0,a.yg)("p",{parentName:"li"},"In the returned result, the number following each BE indicates the number of WAL files for that BE.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"To obtain the number of WAL files for a specified BE."),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre"},'curl -u root: "127.0.0.1:8038/api/get_wal_size?192.168.10.11:9050"\n\nResponse:\n{\n"msg": "OK",\n"code": 0,\n"data": ["192.168.10.11:9050:1"],\n"count": 0\n}\n')),(0,a.yg)("p",{parentName:"li"},"In the returned result, the number following the BE indicates the number of WAL files for that BE."))))}m.isMDXComponent=!0}}]);